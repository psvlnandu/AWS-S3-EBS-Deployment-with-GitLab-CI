stages:
  - build
  - test
  - deploy staging
  - deploy production

variables:
  APP_VERSION: $CI_PIPELINE_IID
build_website:
  image: node:22-alpine3.21
  stage: build
  script: 
    - yarn install 
    - yarn lint
    - yarn test
    - yarn build
    - echo $APP_VERSION > build/version.html
  # artifacts saves the build directory. 
  # These saved ae passed to subsequent jobs in later stages
  artifacts:
    paths:
      - build

# Testing the website on GitLab to check if its working?
check_index:
  image: node:22-alpine3.21
  stage: test
  script:
    - yarn global add serve 
    - apk add curl
    - serve -s build &
    - sleep 10
    - curl http://localhost:3000 | grep "React App"

# Reusing the configuration.
# We call this function using extend keyword in jobs.
.deploy:
  image: 
    name: amazon/aws-cli:2.27.48
    entrypoint: [""]
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - aws --version
    - echo $CI_COMIT_REF_NAME
    - aws s3 sync build s3://$AWS_S3_BUCKET --delete
    - curl $CI_ENVIRONMENT_URL | grep "React App" 
    - curl $CI_ENVIRONMENT_URL/version.html | grep $APP_VERSION 
    


deploy_to_stagging:
  stage: deploy staging
  environment: Staging
  extends: .deploy


deploy_to_production:
  stage: deploy production
  environment: Production
  extends: .deploy
